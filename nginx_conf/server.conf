server {

  listen 8881;
  
  access_log /home/user/stairs/logs/access.log;
  error_log  /home/user/stairs/logs/error.log;

  gzip on; # включить сжатие ответов
  gzip_disable "msie6"; # если клиент - IE6, не сжимать ответы (он глючит)
  gzip_min_length 512; # ответы длиной менее 512 байт не сжимать (это малоэффективно)
  gzip_buffers 4 8k; # размеры внутренних буферов, используемых для сжатия (обычно менять не нужно)
  # файлы с какими mime-типами сжимать
  # тут нет например gif/png/jpeg/zip - они сами по себе уже сжатые, их сжатие - потеря времени
  # тут нет text/html - он включён в этот список по умолчанию, указывать не надо
  gzip_types text/plain text/xml application/xml text/css application/x-javascript application/javascript application/json text/javascript; 
  gzip_comp_level 9; # степень сжатия от 1 до 9, чем больше степень - тем меньше ответ но тем больше ресурсов процессора тратится на сжатие

  

  # обращения к статике обслуживает сам nginx
  location ~ \.(css|jpg)$ {
    root /home/user/stairs/static;
  }

  # обращения к html-страницам nginx будет проксировать на бэкенд на Express
  location / {

    proxy_pass http://127.0.0.1:8880;

    proxy_cache_lock on; # если на бэкенд такой УРЛ сейчас уже проксируется в рамках другого запроса, не проксировать ещё один, а дождаться ответа другого
    proxy_cache cache; # использовать кэш проксированных ответов с таким именем
    # proxy_cache_methods GET HEAD POST; по умолчанию GET HEAD, нам достаточно, но очень важно что если мы знаем что делаем, то можно кэшировать и ответы на POST-запросы!
    # proxy_cache_key позволяет задать ключ кэша, значение по умолчанию нас устраивает; его можно переустановить если мы скажем понимаем что от наличия GET-параметров проксированный ответ всё равно не зависит
    proxy_cache_valid 60s; # кэшировать на 1 минуту

    add_header X-Cached $upstream_cache_status; # добавляем заголовок ответа клиенту, чтобы мы видели, взят ответ из кэша или нет

    access_log /home/user/stairs/logs/server-proxy.log;
  }
  

}